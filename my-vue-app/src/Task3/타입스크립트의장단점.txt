타입스크립트의 장단점

[장점]
1. 개발 문서화
  코드에 명시적인 타입을 작성해줌으로써 코드의 의도를 명확히 전달할 수 있으며 코드의 가독성을 높여준다.
  타입 정보를 통해 코드를 읽고 이해하는데 도움을 주어 유지 보수에 용이하다.

2. 생산성(자동완성)
  정적 타입 정보를 기반으로 코드 완성 기능(코드 완성, 자동 리팩터링, 오류 감지 및 타입 정보 제공 등)을 제공하여 빠른 코드 작성이 가능하다.
  타입 추론을 통해 변수 및 함수의 타입을 자동으로 추론할 수 있으며, 타입 선언을 줄여주어 생산성을 향상시킬 수 있다.

3. 얀졍젹앤 개발 환경(컴파일 단계에서의 에러 검출)
  정적 타입 검사를 통해 코드 작성 중에 타입 오류를 발견할 수 있다. (정적 타입 체크)
  컴파일러가 코드를 분석하여 타입 불일치 및 잘못된 사용을 잡아내기 때문에 런타임 에러를 방지한다.
  코드의 안정성을 높여준다.


[단점]
타입스크립트의 개념 및 활용 방법을 이해하는데 추가적인 학습이 필요하다.
타입 선언을 하다보니 초기에 시간이 오래 걸리고 코드 작성에 부가적인 비용이 발생할 수 있다. (이후 코드 안정성과 유지 보수 향상성에는 도움이 됨)
코드에 타입 정보를 포함하다보니 파일 크기가 커질 수 있다.