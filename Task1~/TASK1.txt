타입스크립트는 자바스크립트를 기반의 상위 확장자로서 자신이 원하는 변수의 타입을 정의 하고 프로그래밍을 하면서 javaScript로 컴파일 되어 실행할수있습니다 
여기서 타입스크립트를 사용하는 중요한 것이 나오는데 그두개는  타입과 컴파일이고 설명드리자면 
타입이란 코드 퀄리티와 가독성을 높일수있어 많이 사용되고 한글로 보자면 자료형으로써 특정 변수가 숫자,문자또는 true/false인지를 정하는 추상 형태이고 
컴파일이란 위에서 정한 타입에 맞지 않는 값 예를 들어 number에 문자열이들어가는것을 생각해볼수있습니다 예를 들어간것처럼 쓰게되면 컴파일 에러가 발생하는데 typeScript는 컴파일 과정에서 타입을 지정하기 때문에 컴파일 에러를 예방할수있고 손쉬운 디버깅이 가능해집니다 
이제 javaScript에서 typeScript가 나온 이유 에 관해서 설명해보겠습니다 
javaScript의 단점은 동적 타입 언어에서오는 단점 , 인터프리터에서 오는 단점 그리고 학습난이도에서 장점이자 단점으로 오는 3가지 단점을 보안하고 위해서 typeScript가나오게됬습니다
1. 동적 타입 언어 vs 정적 타입 언어 
1.1 동적 타입 언어는 런타임 에러 발생 가능성을 가지고 있는데 의존성이잇는 모듈을 변경했을 경우 런타임 에러가 발생하면 어떤 모듈에서 에러가 발생하는지 개발 도중알기까지 시간의 소요가 너무 많아지게 된다 
1.2 정적 타입 언어는 변수의 타입을 명시적으로 지정해서 사용함으로 컴파일 단계에서 타임 체크를 하기 때문에 코드 작성 중 타입 오류를 방지할수있게 되면서 빠르게 에러를 발견할수있게 되어 위와같이 수정하게 되더라도 버그가 생기는 것을 방지할수있습니다 
2. 인터프리터 언어 vs 컴파일 언어 
2.1 인터프리터  언어는 소스코드를 한줄한줄 읽어가면 명령을 처리하고 즉시실행되기에 컴파일 언어에 비해 빠르다는 점이잇긴하지만 
2.2 컴파일 언어는 소스코드 전체를 컴퓨터가 이해할수잇는 언어로 변환과 실행이 따로이룽지므로 최초에는 인터프리터 언어에 비해 시간이 오래걸리지만 런타임 상황에서 모든 소스가 변환되어잇어 빠르게 실행이 가능하다 
3. 학습난이도 
3.1 javaScript는 타입에 제한을 받지않아 쉽게 익힐수잇는반면 타입스크립트는 타입의 제한으로 초반에는 배우기 어렵다는점이잇지만 
3.2 프로젝트의 규모와 제작자가 많을수록 해당데이터의 타입을 알기위해 시간의 차이점이 타입스크립트가 훨씬높기때문에 가독성이 크게 높아 유용하다고 볼수잇습니다 
위와같이 타입스크립트는 프로젝트의 크기 그리고 얼마나 타입이 많이사용되어 런타임 이 날수있는 난이도가 높아짐에따라 더 많은장점이 부각되므로 이러한
상황일때는 typeScript를 고민해서 사용해볼만 한거같다 