# 🎖️TypeScript란??

타입스크립트는 자바스크립트의 단점을 보완하기 위해 만들어진 ```정적 타입 언어``` 이다. 

## 🤚여기서 잠깐! 
### 동적 언어랑 정적 언어?!?
- 동적 언어
	
    - 변수 타입이 런타임일때 결정되는 언어.
    - 유연하고 간단한 문법이며 대표적으로 ```JavaScript,Python```가 해당된다.
    
- 정적 언어
	
    - 컴파일 시에 결정되는 언어.
    - 대표적으로 ```C, C++, C#, Java``` 등이 있으며, 변수에 타입을 지정해줘야한다.
    - 컴파일 시 자료형에 맞지 않은 값이 들어있으면 컴파일 에러가 발생한다.
    - 속도가 빠르고 타입 에러로 인한 문제점을 초기에 발견 가능할 수 있어 타입의 안정성이 높다.
    



기존의 자바스크립트의 기능을 모두 사용할수있고, 타입 문법을 사용하여 에러를 사전에 방지 할 수 있게 한다.
자바스크립트는 확장된언어이기 때문에 잦은 오류가 생긴다.

공식문서를 뜯어보면,,

> **JavaScript and More**
>> 타입스크립트는 편집기와의 더 긴밀한 통합을 지원하기 위해 JavaScript에 추가 구문을 제공한다.

> **A Result You Can Trust**
>> 타입스크립트는 자바스크립트로 변환이 가능하고, 자바스크립트가 실행되는 모든곳에서 실행된다.

> **Safety at Scale**
>> 타입스크립트는 자바스크립트를 이해하며, 추가 코드 없이도 훌륭한 도구를제공하기위해 타입추론을 사용한다.

그렇다면 역서 드는 의문이 있다.

## 🥇TypeScript를 써야하는이유
지금 내가 배우고 있는 ```JavaScript```는 타입이 런타임에 동적으로 설정 되어 보다 타입에 관대하다.  이런 점은 개발자 편의에 따라 손쉽게 사용될 수 있다고 생각이 들지만, 이는 작은 프로젝트에서나 편리하다고 한다.
큰 프로젝트를 진행할때는 (코드 수 증가 & 타인의 코드 수정시) ```Type```과 관련된 버그들이 많이 발생한다.

1. ```JavaScript``` 기반의 **정적 타입 문법을 추가한 프로그래밍 언어**로, ```Type``` 을 사용함으로써 **코드 퀄리티와 가독성**을 높일 수 있다.

2. 컴파일 시 자료형에 맞지 않은 값이 들어가면 **컴파일 에러를 발생**시켜 **손쉬운 디버깅이 가능**해진다.

3. **높은 생산성**을 제공한다. Javascript는 객체의 필드나 함수의 매개변술 들어오는 값이 무엇인지 알기위해 여러파일을 살펴야하지만, ```TypeScript``` 는 변수에 직접 타입을 작성하여 변수 이름뿐 아니라 데이터의 자료형까지 바로  알 수 있다. =>**코드가 직관적**이다

4. ```TypeScript```는 **타입 추론 기능**이 있어 타입이 명시되지 않은 변수에도 자동으로 타입을 설정해준다.

